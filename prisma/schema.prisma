generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                                           Int             @id(map: "PK_96aac72f1574b88752e9fb00089") @default(autoincrement()) @map("user_id")
  username                                     String          @unique(map: "UQ_fe0bb3f6520ee0469504521e710") @db.VarChar(50)
  email                                        String          @unique(map: "UQ_97672ac88f789774dd47f7c8be3") @db.VarChar(100)
  password_hash                                String          @db.VarChar(255)
  fullName                                     String          @map("full_name") @db.VarChar(100)
  full_name_ar                                 String?         @db.VarChar(100)
  phone_number                                 String          @unique(map: "UQ_17d1817f241f10a3dbafb169fd2") @db.VarChar(20)
  province_id                                  Int?
  city_id                                      Int?
  address                                      String?
  avatar                                       String?         @map("profile_image") @db.VarChar(255)
  is_verified                                  Boolean         @default(false)
  is_active                                    Boolean         @default(true)
  rating_average                               Decimal         @default(0) @db.Decimal(3, 2)
  total_sales                                  Int             @default(0)
  role                                         users_role_enum @default(user)
  created_at                                   DateTime        @default(now()) @db.Timestamp(6)
  updated_at                                   DateTime        @default(now()) @db.Timestamp(6)
  conversations_conversations_buyer_idTousers  conversations[] @relation("conversations_buyer_idTousers")
  conversations_conversations_seller_idTousers conversations[] @relation("conversations_seller_idTousers")
  favorites                                    favorites[]
  messages                                     Message[]
  products                                     products[]
  reviews_reviews_reviewer_idTousers           reviews[]       @relation("reviews_reviewer_idTousers")
  reviews_reviews_reviewed_user_idTousers      reviews[]       @relation("reviews_reviewed_user_idTousers")
  transactions_transactions_seller_idTousers   transactions[]  @relation("transactions_seller_idTousers")
  transactions_transactions_buyer_idTousers    transactions[]  @relation("transactions_buyer_idTousers")
  cities                                       cities?         @relation(fields: [city_id], references: [city_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_03934bca2709003c5f08fd436d2")
  provinces                                    provinces?      @relation(fields: [province_id], references: [province_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_58838300035602d7b58c5e60b04")

  @@map("users")
}

model Message {
  message_id      Int           @id(map: "PK_6187089f850b8deeca0232cfeba") @default(autoincrement())
  conversation_id Int
  sender_id       Int
  message_text    String
  is_read         Boolean       @default(false)
  created_at      DateTime      @default(now()) @db.Timestamp(6)
  updated_at      DateTime      @default(now()) @db.Timestamp(6)
  users           User          @relation(fields: [sender_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_22133395bd13b970ccd0c34ab22")
  conversations   conversations @relation(fields: [conversation_id], references: [conversation_id], onDelete: Cascade, onUpdate: NoAction, map: "FK_3bc55a7c3f9ed54b520bb5cfe23")

  @@map("messages")
}

model categories {
  category_id      Int          @id(map: "PK_51615bef2cea22812d0dcab6e18") @default(autoincrement())
  parent_id        Int?
  name             String       @db.VarChar(100)
  name_ar          String       @db.VarChar(100)
  description      String?
  icon             String?      @db.VarChar(100)
  is_active        Boolean      @default(true)
  display_order    Int          @default(0)
  created_at       DateTime     @default(now()) @db.Timestamp(6)
  updated_at       DateTime     @default(now()) @db.Timestamp(6)
  categories       categories?  @relation("categoriesTocategories", fields: [parent_id], references: [category_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_88cea2dc9c31951d06437879b40")
  other_categories categories[] @relation("categoriesTocategories")
  products         products[]
}

model cities {
  city_id     Int        @id(map: "PK_2cea114a4d9e4edb1a69d4eb079") @default(autoincrement())
  province_id Int
  name        String     @db.VarChar(100)
  name_ar     String     @db.VarChar(100)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  provinces   provinces  @relation(fields: [province_id], references: [province_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_52af18d505515614479e5c9f5e9")
  products    products[]
  users       User[]
}

model conversations {
  conversation_id                      Int       @id(map: "PK_c00ef2d6a90778048c6b8150819") @default(autoincrement())
  product_id                           Int
  buyer_id                             Int
  seller_id                            Int
  last_message_at                      DateTime  @default(now()) @db.Timestamp(6)
  is_active                            Boolean   @default(true)
  created_at                           DateTime  @default(now()) @db.Timestamp(6)
  updated_at                           DateTime  @default(now()) @db.Timestamp(6)
  users_conversations_buyer_idTousers  User      @relation("conversations_buyer_idTousers", fields: [buyer_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_4aaec38ea4546a391d0b31efd0a")
  products                             products  @relation(fields: [product_id], references: [product_id], onDelete: Cascade, onUpdate: NoAction, map: "FK_67657faa4a91ed2e933684cdebc")
  users_conversations_seller_idTousers User      @relation("conversations_seller_idTousers", fields: [seller_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_9cecbb6717835889c22999446cd")
  messages                             Message[]

  @@unique([product_id, buyer_id], map: "UQ_f12d369d8a65ef8a0cc4928dbbd")
}

model favorites {
  fav_id     Int      @id(map: "PK_463fb63bc0f2a486242c31682c8") @default(autoincrement())
  user_id    Int
  product_id Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  products   products @relation(fields: [product_id], references: [product_id], onDelete: Cascade, onUpdate: NoAction, map: "FK_003e599a9fc0e8f154b6313639f")
  users      User     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_35a6b05ee3b624d0de01ee50593")

  @@unique([user_id, product_id], map: "UQ_5ed74ffd0060ad5a01107ea552f")
}

model images {
  image_id      Int      @id(map: "PK_c84a23d9d89dd5ea37c283c340e") @default(autoincrement())
  product_id    Int
  image_url     String   @db.VarChar(255)
  is_primary    Boolean  @default(false)
  display_order Int      @default(0)
  created_at    DateTime @default(now()) @db.Timestamp(6)
  updated_at    DateTime @default(now()) @db.Timestamp(6)
  url           String   @db.VarChar
  products      products @relation(fields: [product_id], references: [product_id], onDelete: Cascade, onUpdate: NoAction, map: "FK_96fabbb1202770b8e6a58bf6f1d")
}

model products {
  product_id    Int             @id(map: "PK_a8940a4bf3b90bd7ac15c8f4dd9") @default(autoincrement())
  seller_id     Int
  category_id   Int
  title         String          @db.VarChar(200)
  description   String
  price         Decimal         @db.Decimal(12, 2)
  condition     String          @default("used") @db.VarChar(20)
  province_id   Int
  city_id       Int
  address       String?
  is_negotiable Boolean         @default(true)
  status        String          @default("available") @db.VarChar(20)
  view_count    Int             @default(0)
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @db.Timestamp(6)
  conversations conversations[]
  favorites     favorites[]
  images        images[]
  cities        cities          @relation(fields: [city_id], references: [city_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_05e3b49b4cb050b3b4ce9387d78")
  users         User            @relation(fields: [seller_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_425ee27c69d6b8adc5d6475dcfe")
  categories    categories      @relation(fields: [category_id], references: [category_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_9a5f6868c96e0069e699f33e124")
  provinces     provinces       @relation(fields: [province_id], references: [province_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_9b6f78989267700030a13d5b8e8")
  transactions  transactions[]
}

model provinces {
  province_id Int        @id(map: "PK_2d2f43e7aed758dfe3fafe3db56") @default(autoincrement())
  name        String     @unique(map: "UQ_5c78199072262966fb68b718095") @db.VarChar(100)
  name_ar     String     @db.VarChar(100)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  cities      cities[]
  products    products[]
  users       User[]
}

model reviews {
  review_id                             Int          @id(map: "PK_bfe951d9dca4ba99674c5772905") @default(autoincrement())
  transaction_id                        Int
  reviewer_id                           Int
  reviewed_user_id                      Int
  rating                                Int
  comment                               String?
  created_at                            DateTime     @default(now()) @db.Timestamp(6)
  updated_at                            DateTime     @default(now()) @db.Timestamp(6)
  transactions                          transactions @relation(fields: [transaction_id], references: [transaction_id], onDelete: Cascade, onUpdate: NoAction, map: "FK_6c41731907bca3d6513dbc642dd")
  users_reviews_reviewer_idTousers      User         @relation("reviews_reviewer_idTousers", fields: [reviewer_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_92e950a2513a79bb3fab273c92e")
  users_reviews_reviewed_user_idTousers User         @relation("reviews_reviewed_user_idTousers", fields: [reviewed_user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_f46ea67dc2809872299d3a6f807")

  @@unique([transaction_id, reviewer_id], map: "UQ_5467abc8db4893ca408a063427c")
}

model transactions {
  transaction_id                      Int       @id(map: "PK_9162bf9ab4e31961a8f7932974c") @default(autoincrement())
  product_id                          Int
  buyer_id                            Int
  seller_id                           Int
  price                               Decimal   @db.Decimal(12, 2)
  payment_method                      String?   @db.VarChar(50)
  status                              String    @default("pending") @db.VarChar(20)
  completed_at                        DateTime? @db.Timestamp(6)
  created_at                          DateTime  @default(now()) @db.Timestamp(6)
  updated_at                          DateTime  @default(now()) @db.Timestamp(6)
  reviews                             reviews[]
  users_transactions_seller_idTousers User      @relation("transactions_seller_idTousers", fields: [seller_id], references: [id], onUpdate: NoAction, map: "FK_214e8e26a3bc13250ef55e9a1af")
  users_transactions_buyer_idTousers  User      @relation("transactions_buyer_idTousers", fields: [buyer_id], references: [id], onUpdate: NoAction, map: "FK_8c9b301d18f4ed8cacff33664c6")
  products                            products  @relation(fields: [product_id], references: [product_id], onUpdate: NoAction, map: "FK_8d5b2e87f2129081ebacc894f8f")
}

enum users_role_enum {
  user
  admin
}
